/******/ (() => { // webpackBootstrap
/*!****************************!*\
  !*** ./src/Frontend/Ui.js ***!
  \****************************/
// Define elements
var watchCertifyButton = document.getElementById('watchCertifyButton');
var generateQuizButton = document.getElementById('generateQuizButton');
var buttonContainerElement = document.getElementById('buttonContainer');
var certificateSection = document.getElementById('certificateSection');
var generateCertificatebtnElement = document.getElementById('generateCertificatebtn');
var quizSection = document.getElementById('quizSection');
var resetCertificateBtnElement = document.getElementById('resetCertificateButton');
var SECTIONS = {
  BUTTONS: 'Btn',
  CERTIFICATE: 'certificate',
  QUIZ: 'quiz'
};
watchCertifyButton.addEventListener('click', function () {
  chrome.storage.sync.set({
    currentSection: SECTIONS.CERTIFICATE
  }, updateUI);
});
generateQuizButton.addEventListener('click', function () {
  chrome.storage.sync.set({
    currentSection: SECTIONS.QUIZ
  }, updateUI);
});
resetCertificateBtnElement.addEventListener('click', function () {
  chrome.storage.sync.set({
    currentSection: SECTIONS.BUTTONS,
    videoCompleted: false,
    videoProgress: 0
  }, function () {
    console.log('Progress reset successfully.');
    updateUI();
  });
});
document.addEventListener('DOMContentLoaded', function () {
  chrome.storage.sync.get(['currentSection'], function (data) {
    if (!data.currentSection) {
      chrome.storage.sync.set({
        currentSection: SECTIONS.BUTTONS
      }, updateUI);
    } else {
      updateUI();
    }
  });
});
function updateUI() {
  chrome.storage.sync.get(['currentSection', 'videoCompleted', 'username'], function (data) {
    var currentSection = data.currentSection || SECTIONS.BUTTONS;
    var videoCompleted = data.videoCompleted || false;

    // certificateSection.style.display = 'none';
    // quizSection.style.display = 'none';
    // buttonContainerElement.style.display = 'none';
    // GeneratecertificatesectionElement.style.display = 'none';
    // generatedcertificatesectionElemet.style.display = 'none';

    // Update visibility based on current section
    if (currentSection === SECTIONS.CERTIFICATE) {
      certificateSection.style.display = 'block';
      Hidebuttons();
      // if (videoCompleted || videoProgress === 100) {
      //     console.log("Video completed: showing certificate generation section");
      //     GeneratecertificatesectionElement.style.display = 'block';
      //   } else {
      //     console.log("Video not completed: hiding certificate generation section");
      //     // GeneratecertificatesectionElement.style.display = 'none';
      //   }
    } else if (currentSection === SECTIONS.QUIZ) {
      quizSection.style.display = 'block';
      Hidebuttons();
    } else if (currentSection === SECTIONS.BUTTONS) {
      // quizSection.style.display = 'none';
      certificateSection.style.display = 'none';
      buttonContainerElement.style.display = 'block';
    }
  });
}
var Hidebuttons = function Hidebuttons() {
  buttonContainerElement.style.display = 'none';
};
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWkuYnVuZGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLElBQU1BLGtCQUFrQixHQUFHQyxRQUFRLENBQUNDLGNBQWMsQ0FBQyxvQkFBb0IsQ0FBQztBQUN4RSxJQUFNQyxrQkFBa0IsR0FBR0YsUUFBUSxDQUFDQyxjQUFjLENBQUMsb0JBQW9CLENBQUM7QUFDeEUsSUFBTUUsc0JBQXNCLEdBQUdILFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLGlCQUFpQixDQUFDO0FBRXpFLElBQU1HLGtCQUFrQixHQUFHSixRQUFRLENBQUNDLGNBQWMsQ0FBQyxvQkFBb0IsQ0FBQztBQUd4RSxJQUFNSSw2QkFBNkIsR0FBR0wsUUFBUSxDQUFDQyxjQUFjLENBQUMsd0JBQXdCLENBQUM7QUFDdkYsSUFBTUssV0FBVyxHQUFHTixRQUFRLENBQUNDLGNBQWMsQ0FBQyxhQUFhLENBQUM7QUFFMUQsSUFBTU0sMEJBQTBCLEdBQUdQLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLHdCQUF3QixDQUFDO0FBRXBGLElBQU1PLFFBQVEsR0FBRztFQUNiQyxPQUFPLEVBQUUsS0FBSztFQUNkQyxXQUFXLEVBQUUsYUFBYTtFQUMxQkMsSUFBSSxFQUFFO0FBQ1IsQ0FBQztBQUdIWixrQkFBa0IsQ0FBQ2EsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFlBQU07RUFDL0NDLE1BQU0sQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUNDLEdBQUcsQ0FBQztJQUFFQyxjQUFjLEVBQUVULFFBQVEsQ0FBQ0U7RUFBWSxDQUFDLEVBQUVRLFFBQVEsQ0FBQztBQUM3RSxDQUFDLENBQUM7QUFHRmhCLGtCQUFrQixDQUFDVSxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsWUFBTTtFQUNqREMsTUFBTSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQ0MsR0FBRyxDQUFDO0lBQUVDLGNBQWMsRUFBRVQsUUFBUSxDQUFDRztFQUFLLENBQUMsRUFBRU8sUUFBUSxDQUFDO0FBQ3RFLENBQUMsQ0FBQztBQU1GWCwwQkFBMEIsQ0FBQ0ssZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFlBQU07RUFDekRDLE1BQU0sQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUNDLEdBQUcsQ0FBQztJQUFFQyxjQUFjLEVBQUVULFFBQVEsQ0FBQ0MsT0FBTztJQUFFVSxjQUFjLEVBQUUsS0FBSztJQUFFQyxhQUFhLEVBQUU7RUFBRSxDQUFDLEVBQUUsWUFBTTtJQUMzR0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsOEJBQThCLENBQUM7SUFDM0NKLFFBQVEsQ0FBQyxDQUFDO0VBQ1osQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBR0psQixRQUFRLENBQUNZLGdCQUFnQixDQUFDLGtCQUFrQixFQUFFLFlBQU07RUFDaERDLE1BQU0sQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUNRLEdBQUcsQ0FBQyxDQUFDLGdCQUFnQixDQUFDLEVBQUUsVUFBQ0MsSUFBSSxFQUFLO0lBQ3BELElBQUksQ0FBQ0EsSUFBSSxDQUFDUCxjQUFjLEVBQUU7TUFDeEJKLE1BQU0sQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUNDLEdBQUcsQ0FBQztRQUFFQyxjQUFjLEVBQUVULFFBQVEsQ0FBQ0M7TUFBUSxDQUFDLEVBQUVTLFFBQVEsQ0FBQztJQUN6RSxDQUFDLE1BQU07TUFDTEEsUUFBUSxDQUFDLENBQUM7SUFDWjtFQUNGLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQztBQU1GLFNBQVNBLFFBQVFBLENBQUEsRUFBRztFQUNsQkwsTUFBTSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQ1EsR0FBRyxDQUFDLENBQUMsZ0JBQWdCLEVBQUMsZ0JBQWdCLEVBQUMsVUFBVSxDQUFDLEVBQUUsVUFBQ0MsSUFBSSxFQUFLO0lBQ2hGLElBQU1QLGNBQWMsR0FBR08sSUFBSSxDQUFDUCxjQUFjLElBQUlULFFBQVEsQ0FBQ0MsT0FBTztJQUM5RCxJQUFNVSxjQUFjLEdBQUdLLElBQUksQ0FBQ0wsY0FBYyxJQUFJLEtBQUs7O0lBRW5EO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7O0lBRUE7SUFDQSxJQUFJRixjQUFjLEtBQUtULFFBQVEsQ0FBQ0UsV0FBVyxFQUFFO01BQzNDTixrQkFBa0IsQ0FBQ3FCLEtBQUssQ0FBQ0MsT0FBTyxHQUFHLE9BQU87TUFDMUNDLFdBQVcsQ0FBQyxDQUFDO01BQ2I7TUFDQTtNQUNBO01BQ0E7TUFDQTtNQUNBO01BQ0E7SUFFRixDQUFDLE1BQU0sSUFBSVYsY0FBYyxLQUFLVCxRQUFRLENBQUNHLElBQUksRUFBRTtNQUMzQ0wsV0FBVyxDQUFDbUIsS0FBSyxDQUFDQyxPQUFPLEdBQUcsT0FBTztNQUNuQ0MsV0FBVyxDQUFDLENBQUM7SUFDZixDQUFDLE1BQU0sSUFBSVYsY0FBYyxLQUFLVCxRQUFRLENBQUNDLE9BQU8sRUFBRTtNQUM5QztNQUNBTCxrQkFBa0IsQ0FBQ3FCLEtBQUssQ0FBQ0MsT0FBTyxHQUFHLE1BQU07TUFDekN2QixzQkFBc0IsQ0FBQ3NCLEtBQUssQ0FBQ0MsT0FBTyxHQUFHLE9BQU87SUFDaEQ7RUFDRixDQUFDLENBQUM7QUFDSjtBQVNGLElBQU1DLFdBQVcsR0FBRyxTQUFkQSxXQUFXQSxDQUFBLEVBQVM7RUFDeEJ4QixzQkFBc0IsQ0FBQ3NCLEtBQUssQ0FBQ0MsT0FBTyxHQUFHLE1BQU07QUFDL0MsQ0FBQyxDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL0Zyb250ZW5kL1VpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIERlZmluZSBlbGVtZW50c1xyXG5jb25zdCB3YXRjaENlcnRpZnlCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd2F0Y2hDZXJ0aWZ5QnV0dG9uJyk7XHJcbmNvbnN0IGdlbmVyYXRlUXVpekJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdnZW5lcmF0ZVF1aXpCdXR0b24nKTtcclxuY29uc3QgYnV0dG9uQ29udGFpbmVyRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidXR0b25Db250YWluZXInKTtcclxuXHJcbmNvbnN0IGNlcnRpZmljYXRlU2VjdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjZXJ0aWZpY2F0ZVNlY3Rpb24nKTtcclxuXHJcblxyXG5jb25zdCBnZW5lcmF0ZUNlcnRpZmljYXRlYnRuRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdnZW5lcmF0ZUNlcnRpZmljYXRlYnRuJylcclxuY29uc3QgcXVpelNlY3Rpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncXVpelNlY3Rpb24nKTtcclxuXHJcbmNvbnN0IHJlc2V0Q2VydGlmaWNhdGVCdG5FbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jlc2V0Q2VydGlmaWNhdGVCdXR0b24nKVxyXG5cclxuY29uc3QgU0VDVElPTlMgPSB7XHJcbiAgICBCVVRUT05TOiAnQnRuJyxcclxuICAgIENFUlRJRklDQVRFOiAnY2VydGlmaWNhdGUnLFxyXG4gICAgUVVJWjogJ3F1aXonLFxyXG4gIH07XHJcblxyXG5cclxud2F0Y2hDZXJ0aWZ5QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgY2hyb21lLnN0b3JhZ2Uuc3luYy5zZXQoeyBjdXJyZW50U2VjdGlvbjogU0VDVElPTlMuQ0VSVElGSUNBVEUgfSwgdXBkYXRlVUkpO1xyXG4gIH0pO1xyXG4gIFxyXG4gXHJcbiAgZ2VuZXJhdGVRdWl6QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgY2hyb21lLnN0b3JhZ2Uuc3luYy5zZXQoeyBjdXJyZW50U2VjdGlvbjogU0VDVElPTlMuUVVJWiB9LCB1cGRhdGVVSSk7XHJcbiAgfSk7XHJcblxyXG4gIFxyXG5cclxuXHJcblxyXG4gIHJlc2V0Q2VydGlmaWNhdGVCdG5FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgY2hyb21lLnN0b3JhZ2Uuc3luYy5zZXQoeyBjdXJyZW50U2VjdGlvbjogU0VDVElPTlMuQlVUVE9OUywgdmlkZW9Db21wbGV0ZWQ6IGZhbHNlLCB2aWRlb1Byb2dyZXNzOiAwIH0sICgpID0+IHtcclxuICAgICAgY29uc29sZS5sb2coJ1Byb2dyZXNzIHJlc2V0IHN1Y2Nlc3NmdWxseS4nKTtcclxuICAgICAgdXBkYXRlVUkoKTtcclxuICAgIH0pO1xyXG4gIH0pO1xyXG5cclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XHJcbiAgICBjaHJvbWUuc3RvcmFnZS5zeW5jLmdldChbJ2N1cnJlbnRTZWN0aW9uJ10sIChkYXRhKSA9PiB7XHJcbiAgICAgIGlmICghZGF0YS5jdXJyZW50U2VjdGlvbikge1xyXG4gICAgICAgIGNocm9tZS5zdG9yYWdlLnN5bmMuc2V0KHsgY3VycmVudFNlY3Rpb246IFNFQ1RJT05TLkJVVFRPTlMgfSwgdXBkYXRlVUkpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHVwZGF0ZVVJKCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH0pO1xyXG4gIFxyXG5cclxuXHJcblxyXG5cclxuICBmdW5jdGlvbiB1cGRhdGVVSSgpIHtcclxuICAgIGNocm9tZS5zdG9yYWdlLnN5bmMuZ2V0KFsnY3VycmVudFNlY3Rpb24nLCd2aWRlb0NvbXBsZXRlZCcsJ3VzZXJuYW1lJ10sIChkYXRhKSA9PiB7XHJcbiAgICAgIGNvbnN0IGN1cnJlbnRTZWN0aW9uID0gZGF0YS5jdXJyZW50U2VjdGlvbiB8fCBTRUNUSU9OUy5CVVRUT05TO1xyXG4gICAgICBjb25zdCB2aWRlb0NvbXBsZXRlZCA9IGRhdGEudmlkZW9Db21wbGV0ZWQgfHwgZmFsc2U7XHJcbiAgIFxyXG4gICAgICAvLyBjZXJ0aWZpY2F0ZVNlY3Rpb24uc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgLy8gcXVpelNlY3Rpb24uc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgLy8gYnV0dG9uQ29udGFpbmVyRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAvLyBHZW5lcmF0ZWNlcnRpZmljYXRlc2VjdGlvbkVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgLy8gZ2VuZXJhdGVkY2VydGlmaWNhdGVzZWN0aW9uRWxlbWV0LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgXHJcbiAgICAgIC8vIFVwZGF0ZSB2aXNpYmlsaXR5IGJhc2VkIG9uIGN1cnJlbnQgc2VjdGlvblxyXG4gICAgICBpZiAoY3VycmVudFNlY3Rpb24gPT09IFNFQ1RJT05TLkNFUlRJRklDQVRFKSB7XHJcbiAgICAgICAgY2VydGlmaWNhdGVTZWN0aW9uLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG4gICAgICAgIEhpZGVidXR0b25zKCk7XHJcbiAgICAgICAgLy8gaWYgKHZpZGVvQ29tcGxldGVkIHx8IHZpZGVvUHJvZ3Jlc3MgPT09IDEwMCkge1xyXG4gICAgICAgIC8vICAgICBjb25zb2xlLmxvZyhcIlZpZGVvIGNvbXBsZXRlZDogc2hvd2luZyBjZXJ0aWZpY2F0ZSBnZW5lcmF0aW9uIHNlY3Rpb25cIik7XHJcbiAgICAgICAgLy8gICAgIEdlbmVyYXRlY2VydGlmaWNhdGVzZWN0aW9uRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuICAgICAgICAvLyAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gICAgIGNvbnNvbGUubG9nKFwiVmlkZW8gbm90IGNvbXBsZXRlZDogaGlkaW5nIGNlcnRpZmljYXRlIGdlbmVyYXRpb24gc2VjdGlvblwiKTtcclxuICAgICAgICAvLyAgICAgLy8gR2VuZXJhdGVjZXJ0aWZpY2F0ZXNlY3Rpb25FbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgLy8gICB9XHJcbiAgICAgICAgICBcclxuICAgICAgfSBlbHNlIGlmIChjdXJyZW50U2VjdGlvbiA9PT0gU0VDVElPTlMuUVVJWikge1xyXG4gICAgICAgIHF1aXpTZWN0aW9uLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG4gICAgICAgIEhpZGVidXR0b25zKCk7XHJcbiAgICAgIH0gZWxzZSBpZiAoY3VycmVudFNlY3Rpb24gPT09IFNFQ1RJT05TLkJVVFRPTlMpIHtcclxuICAgICAgICAvLyBxdWl6U2VjdGlvbi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgIGNlcnRpZmljYXRlU2VjdGlvbi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgIGJ1dHRvbkNvbnRhaW5lckVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuXHJcblxyXG5cclxuXHJcblxyXG4gXHJcblxyXG5cclxuY29uc3QgSGlkZWJ1dHRvbnMgPSAoKSA9PiB7XHJcbiAgYnV0dG9uQ29udGFpbmVyRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG59O1xyXG5cclxuIl0sIm5hbWVzIjpbIndhdGNoQ2VydGlmeUJ1dHRvbiIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJnZW5lcmF0ZVF1aXpCdXR0b24iLCJidXR0b25Db250YWluZXJFbGVtZW50IiwiY2VydGlmaWNhdGVTZWN0aW9uIiwiZ2VuZXJhdGVDZXJ0aWZpY2F0ZWJ0bkVsZW1lbnQiLCJxdWl6U2VjdGlvbiIsInJlc2V0Q2VydGlmaWNhdGVCdG5FbGVtZW50IiwiU0VDVElPTlMiLCJCVVRUT05TIiwiQ0VSVElGSUNBVEUiLCJRVUlaIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNocm9tZSIsInN0b3JhZ2UiLCJzeW5jIiwic2V0IiwiY3VycmVudFNlY3Rpb24iLCJ1cGRhdGVVSSIsInZpZGVvQ29tcGxldGVkIiwidmlkZW9Qcm9ncmVzcyIsImNvbnNvbGUiLCJsb2ciLCJnZXQiLCJkYXRhIiwic3R5bGUiLCJkaXNwbGF5IiwiSGlkZWJ1dHRvbnMiXSwic291cmNlUm9vdCI6IiJ9