/******/ (() => { // webpackBootstrap
/*!****************************!*\
  !*** ./src/Frontend/Ui.js ***!
  \****************************/
// Elements
var watchCertifyButton = document.getElementById('watchCertifyButton');
var generateQuizButton = document.getElementById('generateQuizButton');
var resetCertificateButton = document.getElementById('resetCertificateButton'); // Updated
var resetQuizButton = document.getElementById('resetQuizButton'); // Updated
var certificateSection = document.getElementById('certificateSection');
var quizSection = document.getElementById('quizSection');
var buttonContainer = document.getElementById('buttonContainer');
var generateButton = document.getElementById('generateButton');
// Event Listeners

watchCertifyButton.addEventListener('click', function () {
  localStorage.setItem('currentSection', 'certificate'); // Save selected section
  updateUI(); // Update the display
});
generateQuizButton.addEventListener('click', function () {
  localStorage.setItem('currentSection', 'quiz'); // Save selected section
  updateUI(); // Update the display
});
resetCertificateButton.addEventListener('click', function () {
  // Reset UI to default state
  localStorage.setItem('currentSection', 'buttons');
  updateUI(); // Update the display

  // Reset progress and related elements
  chrome.storage.sync.set({
    videoCompleted: false,
    videoProgress: 0
  }, function () {
    if (chrome.runtime.lastError) {
      console.error('Error resetting progress:', chrome.runtime.lastError);
      return;
    } // Reset progress display
    // generateButton.style.display = 'block'; // Show generate button again
    console.log('Progress reset successfully.');
  });
});
resetQuizButton.addEventListener('click', function () {
  // Updated
  localStorage.setItem('currentSection', 'buttons'); // Reset to default state
  updateUI(); // Update the display
});

// Function to update the UI based on localStorage
function updateUI() {
  var currentSection = localStorage.getItem('currentSection');
  certificateSection.style.display = 'none';
  quizSection.style.display = 'none';
  buttonContainer.style.display = 'block';
  watchCertifyButton.disabled = false;
  generateQuizButton.disabled = false;
  if (currentSection === 'certificate') {
    certificateSection.style.display = 'block';
    buttonContainer.style.display = 'none';
    watchCertifyButton.disabled = true;
  } else if (currentSection === 'quiz') {
    quizSection.style.display = 'block';
    buttonContainer.style.display = 'none';
    generateQuizButton.disabled = true;
  }
}

// Initialize UI on page load
document.addEventListener('DOMContentLoaded', function () {
  if (!localStorage.getItem('currentSection')) {
    localStorage.setItem('currentSection', 'buttons'); // Set default state on first load
  }
  updateUI(); // Apply the saved state
});
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFrQixDQUFDcUIsS0FBSyxDQUFDQyxPQUFPLEdBQUcsT0FBTztJQUMxQ3BCLGVBQWUsQ0FBQ21CLEtBQUssQ0FBQ0MsT0FBTyxHQUFHLE1BQU07SUFDdEM1QixrQkFBa0IsQ0FBQzZCLFFBQVEsR0FBRyxJQUFJO0VBQ3RDLENBQUMsTUFBTSxJQUFJSixjQUFjLEtBQUssTUFBTSxFQUFFO0lBQ2xDbEIsV0FBVyxDQUFDb0IsS0FBSyxDQUFDQyxPQUFPLEdBQUcsT0FBTztJQUNuQ3BCLGVBQWUsQ0FBQ21CLEtBQUssQ0FBQ0MsT0FBTyxHQUFHLE1BQU07SUFDdEN6QixrQkFBa0IsQ0FBQzBCLFFBQVEsR0FBRyxJQUFJO0VBQ3RDO0FBQ0o7O0FBRUE7QUFDQTVCLFFBQVEsQ0FBQ1MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsWUFBTTtFQUNoRCxJQUFJLENBQUNDLFlBQVksQ0FBQ2UsT0FBTyxDQUFDLGdCQUFnQixDQUFDLEVBQUU7SUFDekNmLFlBQVksQ0FBQ0MsT0FBTyxDQUFDLGdCQUFnQixFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUM7RUFDdkQ7RUFDQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hCLENBQUMsQ0FBQyxDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL0Zyb250ZW5kL1VpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEVsZW1lbnRzXHJcbmNvbnN0IHdhdGNoQ2VydGlmeUJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3YXRjaENlcnRpZnlCdXR0b24nKTtcclxuY29uc3QgZ2VuZXJhdGVRdWl6QnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dlbmVyYXRlUXVpekJ1dHRvbicpO1xyXG5jb25zdCByZXNldENlcnRpZmljYXRlQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jlc2V0Q2VydGlmaWNhdGVCdXR0b24nKTsgLy8gVXBkYXRlZFxyXG5jb25zdCByZXNldFF1aXpCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzZXRRdWl6QnV0dG9uJyk7IC8vIFVwZGF0ZWRcclxuY29uc3QgY2VydGlmaWNhdGVTZWN0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NlcnRpZmljYXRlU2VjdGlvbicpO1xyXG5jb25zdCBxdWl6U2VjdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdxdWl6U2VjdGlvbicpO1xyXG5jb25zdCBidXR0b25Db250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYnV0dG9uQ29udGFpbmVyJyk7XHJcbmNvbnN0IGdlbmVyYXRlQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dlbmVyYXRlQnV0dG9uJylcclxuLy8gRXZlbnQgTGlzdGVuZXJzXHJcblxyXG53YXRjaENlcnRpZnlCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnY3VycmVudFNlY3Rpb24nLCAnY2VydGlmaWNhdGUnKTsgLy8gU2F2ZSBzZWxlY3RlZCBzZWN0aW9uXHJcbiAgICB1cGRhdGVVSSgpOyAvLyBVcGRhdGUgdGhlIGRpc3BsYXlcclxufSk7XHJcblxyXG5nZW5lcmF0ZVF1aXpCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnY3VycmVudFNlY3Rpb24nLCAncXVpeicpOyAvLyBTYXZlIHNlbGVjdGVkIHNlY3Rpb25cclxuICAgIHVwZGF0ZVVJKCk7IC8vIFVwZGF0ZSB0aGUgZGlzcGxheVxyXG59KTtcclxuXHJcbnJlc2V0Q2VydGlmaWNhdGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAvLyBSZXNldCBVSSB0byBkZWZhdWx0IHN0YXRlXHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnY3VycmVudFNlY3Rpb24nLCAnYnV0dG9ucycpOyBcclxuICAgIHVwZGF0ZVVJKCk7IC8vIFVwZGF0ZSB0aGUgZGlzcGxheVxyXG5cclxuICAgIC8vIFJlc2V0IHByb2dyZXNzIGFuZCByZWxhdGVkIGVsZW1lbnRzXHJcbiAgICBjaHJvbWUuc3RvcmFnZS5zeW5jLnNldCh7IHZpZGVvQ29tcGxldGVkOiBmYWxzZSwgdmlkZW9Qcm9ncmVzczogMCB9LCAoKSA9PiB7XHJcbiAgICAgICAgaWYgKGNocm9tZS5ydW50aW1lLmxhc3RFcnJvcikge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciByZXNldHRpbmcgcHJvZ3Jlc3M6JywgY2hyb21lLnJ1bnRpbWUubGFzdEVycm9yKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH0vLyBSZXNldCBwcm9ncmVzcyBkaXNwbGF5XHJcbiAgICAgICAgLy8gZ2VuZXJhdGVCdXR0b24uc3R5bGUuZGlzcGxheSA9ICdibG9jayc7IC8vIFNob3cgZ2VuZXJhdGUgYnV0dG9uIGFnYWluXHJcbiAgICAgICAgY29uc29sZS5sb2coJ1Byb2dyZXNzIHJlc2V0IHN1Y2Nlc3NmdWxseS4nKTtcclxuICAgIH0pO1xyXG59KTtcclxuXHJcblxyXG5yZXNldFF1aXpCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7IC8vIFVwZGF0ZWRcclxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdjdXJyZW50U2VjdGlvbicsICdidXR0b25zJyk7IC8vIFJlc2V0IHRvIGRlZmF1bHQgc3RhdGVcclxuICAgIHVwZGF0ZVVJKCk7IC8vIFVwZGF0ZSB0aGUgZGlzcGxheVxyXG59KTtcclxuXHJcbi8vIEZ1bmN0aW9uIHRvIHVwZGF0ZSB0aGUgVUkgYmFzZWQgb24gbG9jYWxTdG9yYWdlXHJcbmZ1bmN0aW9uIHVwZGF0ZVVJKCkge1xyXG4gICAgY29uc3QgY3VycmVudFNlY3Rpb24gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VycmVudFNlY3Rpb24nKTtcclxuICAgIGNlcnRpZmljYXRlU2VjdGlvbi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgcXVpelNlY3Rpb24uc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgIGJ1dHRvbkNvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuICAgIHdhdGNoQ2VydGlmeUJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgZ2VuZXJhdGVRdWl6QnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XHJcblxyXG4gICAgaWYgKGN1cnJlbnRTZWN0aW9uID09PSAnY2VydGlmaWNhdGUnKSB7XHJcbiAgICAgICAgY2VydGlmaWNhdGVTZWN0aW9uLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG4gICAgICAgIGJ1dHRvbkNvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgIHdhdGNoQ2VydGlmeUJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICB9IGVsc2UgaWYgKGN1cnJlbnRTZWN0aW9uID09PSAncXVpeicpIHtcclxuICAgICAgICBxdWl6U2VjdGlvbi5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuICAgICAgICBidXR0b25Db250YWluZXIuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICBnZW5lcmF0ZVF1aXpCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgfVxyXG59XHJcblxyXG4vLyBJbml0aWFsaXplIFVJIG9uIHBhZ2UgbG9hZFxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4ge1xyXG4gICAgaWYgKCFsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VycmVudFNlY3Rpb24nKSkge1xyXG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdjdXJyZW50U2VjdGlvbicsICdidXR0b25zJyk7IC8vIFNldCBkZWZhdWx0IHN0YXRlIG9uIGZpcnN0IGxvYWRcclxuICAgIH1cclxuICAgIHVwZGF0ZVVJKCk7IC8vIEFwcGx5IHRoZSBzYXZlZCBzdGF0ZVxyXG59KTtcclxuIl0sIm5hbWVzIjpbIndhdGNoQ2VydGlmeUJ1dHRvbiIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJnZW5lcmF0ZVF1aXpCdXR0b24iLCJyZXNldENlcnRpZmljYXRlQnV0dG9uIiwicmVzZXRRdWl6QnV0dG9uIiwiY2VydGlmaWNhdGVTZWN0aW9uIiwicXVpelNlY3Rpb24iLCJidXR0b25Db250YWluZXIiLCJnZW5lcmF0ZUJ1dHRvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwidXBkYXRlVUkiLCJjaHJvbWUiLCJzdG9yYWdlIiwic3luYyIsInNldCIsInZpZGVvQ29tcGxldGVkIiwidmlkZW9Qcm9ncmVzcyIsInJ1bnRpbWUiLCJsYXN0RXJyb3IiLCJjb25zb2xlIiwiZXJyb3IiLCJsb2ciLCJjdXJyZW50U2VjdGlvbiIsImdldEl0ZW0iLCJzdHlsZSIsImRpc3BsYXkiLCJkaXNhYmxlZCJdLCJzb3VyY2VSb290IjoiIn0=